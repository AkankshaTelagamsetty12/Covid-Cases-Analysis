<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CascadingFiltersHamburgerUI />
    <_.fcp.DashboardExportButton.true...DashboardExportButton />
    <_.fcp.DatagraphCoreV1.true...DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <_.fcp.DatagraphNodeSingleValueFieldV1.true...DatagraphNodeSingleValueFieldV1 />
    <ISO8601DefaultCalendarPref />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Week' caption='p.DateGranularity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <aliases>
          <alias key='&quot;month&quot;' value='Month' />
          <alias key='&quot;quarter&quot;' value='Quarter' />
          <alias key='&quot;week&quot;' value='Week' />
          <alias key='&quot;year&quot;' value='Year' />
        </aliases>
        <members>
          <member alias='Week' value='&quot;week&quot;' />
          <member alias='Month' value='&quot;month&quot;' />
          <member alias='Quarter' value='&quot;quarter&quot;' />
          <member alias='Year' value='&quot;year&quot;' />
        </members>
      </column>
      <column alias='Deaths' caption='p.MetricSelector' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;deaths&quot;'>
        <calculation class='tableau' formula='&quot;deaths&quot;' />
        <aliases>
          <alias key='&quot;deaths&quot;' value='Deaths' />
          <alias key='&quot;hospitalized&quot;' value='Hospitalized' />
          <alias key='&quot;recovered&quot;' value='Recovered' />
        </aliases>
        <members>
          <member alias='Deaths' value='&quot;deaths&quot;' />
          <member alias='Recovered' value='&quot;recovered&quot;' />
          <member alias='Hospitalized' value='&quot;hospitalized&quot;' />
        </members>
      </column>
      <column caption='p.PercentChange' datatype='real' default-format='p0.00%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.075'>
        <calculation class='tableau' formula='0.075' />
        <range granularity='0.005' max='0.1' min='0.01' />
      </column>
      <column alias='All States' caption='p.VizToggle' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <aliases>
          <alias key='false' value='All States' />
          <alias key='true' value='Highest State' />
        </aliases>
        <members>
          <member alias='Highest State' value='true' />
          <member alias='All States' value='false' />
        </members>
      </column>
      <column caption='p.TopN' datatype='integer' datatype-customized='true' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
        <range granularity='1' max='20' min='1' />
      </column>
      <column caption='p.State' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;State&quot;'>
        <calculation class='tableau' formula='&quot;State&quot;' />
        <members>
          <member value='&quot;State&quot;' />
        </members>
      </column>
      <column caption='p.TotalRes' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Test Results&quot;'>
        <calculation class='tableau' formula='&quot;Total Test Results&quot;' />
        <members>
          <member value='&quot;Total Test Results&quot;' />
        </members>
      </column>
      <column caption='p.MetricSelector2' datatype='string' name='[p.MetricSelector (copy)_1742330121253232650]' param-domain-type='list' role='measure' type='nominal' value='&quot;In ICU&quot;'>
        <calculation class='tableau' formula='&quot;In ICU&quot;' />
        <aliases>
          <alias key='&quot;ventilator&quot;' value='On ventilator' />
        </aliases>
        <members>
          <member alias='On ventilator' value='&quot;ventilator&quot;' />
          <member value='&quot;In ICU&quot;' />
        </members>
      </column>
      <column caption='p.PercentChange2' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330121256222734]' param-domain-type='range' role='measure' type='quantitative' value='0.075'>
        <calculation class='tableau' formula='0.075' />
        <range granularity='0.005' max='0.1' min='0.01' />
      </column>
      <column caption='p.PercentChange-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330123358715930]' param-domain-type='range' role='measure' type='quantitative' value='0.045000000000000005'>
        <calculation class='tableau' formula='0.045000000000000005' />
        <range granularity='0.005' max='0.1' min='0.01' />
      </column>
      <column caption='p.PercentChange2-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange2 (copy)_1742330123358887964]' param-domain-type='range' role='measure' type='quantitative' value='0.03'>
        <calculation class='tableau' formula='0.03' />
        <range granularity='0.005' max='0.1' min='0.01' />
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;month&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;quarter&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='COVID United States Administered Vaccines in 2022' inline='true' name='sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb' version='18.1'>
      <repository-location id='CoVIDUnitedStatesAdministeredVaccinesin2022' path='/t/moderna/datasources' revision='1.0' site='moderna' />
      <connection channel='https' class='sqlproxy' dbname='CoVIDUnitedStatesAdministeredVaccinesin2022' directory='/dataserver' port='443' server='prod-useast-b.online.tableau.com' username=''>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>As of Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[As of Date]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>As of Date</remote-alias>
            <ordinal>3</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>1</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Vaccine Administration Type Values (Rolling)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vaccine Administration Type Values (Rolling)]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Vaccine Administration Type Values (Rolling)</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccine Administration Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vaccine Administration Type]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Vaccine Administration Type</remote-alias>
            <ordinal>2</ordinal>
            <layered>true</layered>
            <family>Extract</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_IGNORE_HINT_CHECK_NOT_NULL'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='Extract' inline='true' version='18.1' xml:base='https://prod-useast-b.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
  </document-format-change-manifest>
  <repository-location id='CoVIDUnitedStatesAdministeredVaccinesin2022' path='/t/moderna/datasources' revision='1.0' site='moderna' />
  <connection channel='https' class='sqlproxy' dbname='CoVIDUnitedStatesAdministeredVaccinesin2022' directory='/dataserver' port='443' server='prod-useast-b.online.tableau.com'>
    <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[As of Date]' value='[sqlproxy].[As of Date]' />
      <map key='[Country]' value='[sqlproxy].[Country]' />
      <map key='[State]' value='[sqlproxy].[State]' />
      <map key='[Vaccine Administration Type Values (Rolling)]' value='[sqlproxy].[Vaccine Administration Type Values (Rolling)]' />
      <map key='[Vaccine Administration Type]' value='[sqlproxy].[Vaccine Administration Type]' />
    </cols>
  </connection>
  <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph is-legacy='true'>
    <objects>
      <object id='Migrated Data'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
  </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
  <overlay-dialect-set>
    <overlay-dialect class='vizengine' version='0.1.0'>
    </overlay-dialect>
  </overlay-dialect-set>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>false</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column aggregation='Year' datatype='date' default-type='ordinal' layered='true' name='[As of Date]' pivot='key' role='dimension' type='ordinal' user-datatype='date' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[State]' pivot='key' role='dimension' semantic-role='[State].[Name]' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='real' default-type='quantitative' layered='true' name='[Vaccine Administration Type Values (Rolling)]' pivot='key' role='measure' type='quantitative' user-datatype='real' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Vaccine Administration Type]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Migrated Data]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Migrated Data:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[diff:sum:Vaccine Administration Type Values (Rolling):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[State]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[State]' ordering-type='Field' rank-options='Competition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[State]' ordering-type='Field' rank-options='Dense,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[State]' ordering-type='Field' rank-options='ModifiedCompetition,Ascending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[rank:sum:Vaccine Administration Type Values (Rolling):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[State]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Vaccine Administration Type Values (Rolling)]' derivation='Sum' name='[sum:Vaccine Administration Type Values (Rolling):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[__tableau_internal_object_id__].[cnt:Migrated Data:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[diff:sum:Vaccine Administration Type Values (Rolling):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk:8]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[rank:sum:Vaccine Administration Type Values (Rolling):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[sqlproxy.10t9ixy0ke2c5d0zph1ad04t61xb].[sum:Vaccine Administration Type Values (Rolling):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_tracking (covid_tracking_wb)' inline='true' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_tracking_wb' name='excel-direct.04jsdvk1b0mr5g10tg7g31fyeu1m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/atelagamsetty/Downloads/covid_tracking_wb.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04jsdvk1b0mr5g10tg7g31fyeu1m' name='covid_tracking' table='[covid_tracking$]' type='table'>
          <columns gridOrigin='A1:AE10001:no:A1:AE10001:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='positive' ordinal='2' />
            <column datatype='integer' name='negative' ordinal='3' />
            <column datatype='integer' name='pending' ordinal='4' />
            <column datatype='integer' name='hospitalized_currently' ordinal='5' />
            <column datatype='integer' name='hospitalized_cumulative' ordinal='6' />
            <column datatype='integer' name='in_icu_currently' ordinal='7' />
            <column datatype='integer' name='in_icu_cumulative' ordinal='8' />
            <column datatype='integer' name='on_ventilator_currently' ordinal='9' />
            <column datatype='integer' name='on_ventilator_cumulative' ordinal='10' />
            <column datatype='integer' name='recovered' ordinal='11' />
            <column datatype='string' name='data_quality_grade' ordinal='12' />
            <column datatype='datetime' name='last_update_et' ordinal='13' />
            <column datatype='string' name='hash' ordinal='14' />
            <column datatype='string' name='date_checked' ordinal='15' />
            <column datatype='integer' name='death' ordinal='16' />
            <column datatype='integer' name='hospitalized' ordinal='17' />
            <column datatype='integer' name='total' ordinal='18' />
            <column datatype='integer' name='total_test_results' ordinal='19' />
            <column datatype='integer' name='pos_neg' ordinal='20' />
            <column datatype='integer' name='fips' ordinal='21' />
            <column datatype='integer' name='death_increase' ordinal='22' />
            <column datatype='integer' name='hospitalized_increase' ordinal='23' />
            <column datatype='integer' name='negative_increase' ordinal='24' />
            <column datatype='integer' name='positive_increase' ordinal='25' />
            <column datatype='integer' name='total_test_results_increase' ordinal='26' />
            <column datatype='integer' name='fips_code' ordinal='27' />
            <column datatype='string' name='iso_subdivision' ordinal='28' />
            <column datatype='datetime' name='load_time' ordinal='29' />
            <column datatype='string' name='iso_country' ordinal='30' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04jsdvk1b0mr5g10tg7g31fyeu1m' name='covid_tracking' table='[covid_tracking$]' type='table'>
          <columns gridOrigin='A1:AE10001:no:A1:AE10001:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='integer' name='positive' ordinal='2' />
            <column datatype='integer' name='negative' ordinal='3' />
            <column datatype='integer' name='pending' ordinal='4' />
            <column datatype='integer' name='hospitalized_currently' ordinal='5' />
            <column datatype='integer' name='hospitalized_cumulative' ordinal='6' />
            <column datatype='integer' name='in_icu_currently' ordinal='7' />
            <column datatype='integer' name='in_icu_cumulative' ordinal='8' />
            <column datatype='integer' name='on_ventilator_currently' ordinal='9' />
            <column datatype='integer' name='on_ventilator_cumulative' ordinal='10' />
            <column datatype='integer' name='recovered' ordinal='11' />
            <column datatype='string' name='data_quality_grade' ordinal='12' />
            <column datatype='datetime' name='last_update_et' ordinal='13' />
            <column datatype='string' name='hash' ordinal='14' />
            <column datatype='string' name='date_checked' ordinal='15' />
            <column datatype='integer' name='death' ordinal='16' />
            <column datatype='integer' name='hospitalized' ordinal='17' />
            <column datatype='integer' name='total' ordinal='18' />
            <column datatype='integer' name='total_test_results' ordinal='19' />
            <column datatype='integer' name='pos_neg' ordinal='20' />
            <column datatype='integer' name='fips' ordinal='21' />
            <column datatype='integer' name='death_increase' ordinal='22' />
            <column datatype='integer' name='hospitalized_increase' ordinal='23' />
            <column datatype='integer' name='negative_increase' ordinal='24' />
            <column datatype='integer' name='positive_increase' ordinal='25' />
            <column datatype='integer' name='total_test_results_increase' ordinal='26' />
            <column datatype='integer' name='fips_code' ordinal='27' />
            <column datatype='string' name='iso_subdivision' ordinal='28' />
            <column datatype='datetime' name='load_time' ordinal='29' />
            <column datatype='string' name='iso_country' ordinal='30' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE10001:no:A1:AE10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized_currently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized_currently]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>hospitalized_currently</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized_cumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized_cumulative]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>hospitalized_cumulative</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_icu_currently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_icu_currently]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>in_icu_currently</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_icu_cumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_icu_cumulative]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>in_icu_cumulative</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>on_ventilator_currently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[on_ventilator_currently]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>on_ventilator_currently</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>on_ventilator_cumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[on_ventilator_cumulative]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>on_ventilator_cumulative</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_quality_grade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[data_quality_grade]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>data_quality_grade</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update_et</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update_et]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>last_update_et</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hash</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hash]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>hash</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_checked</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_checked]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>date_checked</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>total</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_test_results</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_test_results]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>total_test_results</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_neg</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pos_neg]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>pos_neg</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death_increase]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>death_increase</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized_increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized_increase]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>hospitalized_increase</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative_increase]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>negative_increase</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive_increase]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>positive_increase</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_test_results_increase</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_test_results_increase]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>total_test_results_increase</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips_code]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>fips_code</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_subdivision</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_subdivision]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>iso_subdivision</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>load_time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[load_time]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>load_time</remote-alias>
            <ordinal>29</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[covid_tracking]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!tracking_99563D13FC864367A9308BC69D3FED9B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]&quot;' value='Currently' />
          <alias key='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330123359576093:qk]&quot;' value='Estimation' />
        </aliases>
      </column>
      <column caption='TotalRes' datatype='integer' name='[Calculation_1157988076041957376]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_test_results])' />
      </column>
      <column caption='Data Selection' datatype='real' name='[Calculation_1742330121250885638]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='STR([Parameters].[Parameter 1],[date])' />
      </column>
      <column caption='Date Selection' datatype='date' datatype-customized='true' name='[Calculation_1742330121251753993]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[date]))' />
      </column>
      <column caption='Metric Selector 1' datatype='integer' name='[Calculation_1742330121253339147]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10; WHEN &quot;deaths&quot; THEN SUM([death])&#13;&#10; WHEN &quot;recovered&quot; THEN SUM([recovered])&#13;&#10; WHEN &quot;hospitalized&quot; THEN SUM([hospitalized])&#13;&#10;WHEN &quot;ventilator&quot; THEN SUM([on_ventilator_currently])&#13;&#10;WHEN &quot;In ICU&quot; THEN SUM([in_icu_currently])&#13;&#10;END' />
      </column>
      <column caption='Metric Selector 2' datatype='integer' name='[Calculation_1742330121253789708]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[p.MetricSelector (copy)_1742330121253232650]&#13;&#10; WHEN &quot;deaths&quot; THEN SUM([death])&#13;&#10; WHEN &quot;recovered&quot; THEN SUM([recovered])&#13;&#10; WHEN &quot;hospitalized&quot; THEN SUM([hospitalized])&#13;&#10;WHEN &quot;ventilator&quot; THEN SUM([on_ventilator_currently])&#13;&#10;WHEN &quot;In ICU&quot; THEN SUM([in_icu_currently])&#13;&#10;END' />
      </column>
      <column caption='What-if Deaths' datatype='real' name='[Calculation_1742330121255972877]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#13;&#10;IF [state]=&quot;MA&quot; &#13;&#10;THEN [death]*(1+[Parameters].[p.PercentChange (copy)_1742330121256222734])&#13;&#10;ELSE [death]*(1+[Parameters].[Parameter 3])&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='Viz Toggle' datatype='boolean' name='[Calculation_1742330122279485456]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
      </column>
      <column caption='Date Trunc - Month' datatype='date' datatype-customized='true' name='[Calculation_1742330122717749269]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;, [date]))' />
      </column>
      <column caption='Month' datatype='integer' name='[Calculation_1742330122718257174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MONTH([date])' />
      </column>
      <column caption='TODAY()' datatype='date' name='[Calculation_1742330122719383576]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='TODAY()' />
      </column>
      <column caption='YTD Deaths' datatype='integer' name='[Calculation_1742330122719465497]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(&#13;&#10;IF &#13;&#10;[date] &gt;= DATETRUNC(&apos;year&apos;,TODAY()) AND&#13;&#10;[date] &lt;= [Calculation_1742330122719383576]&#13;&#10;THEN&#13;&#10;[death]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='What-if Ventilators' datatype='real' name='[Calculation_1742330123359576093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [state]=&quot;MI&quot; OR [state]=&quot;PA&quot;&#13;&#10;THEN [on_ventilator_currently]*(1+[Parameters].[p.PercentChange (copy)_1742330123358715930])&#13;&#10;ELSE [on_ventilator_currently]*(1+[Parameters].[p.PercentChange2 (copy)_1742330123358887964])&#13;&#10;END)' />
      </column>
      <column caption='TotalRes (copy)' datatype='real' name='[TotalRes (copy)_1157988076391067650]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_test_results])/1000000000' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='covid_tracking' datatype='table' name='[__tableau_internal_object_id__].[covid!tracking_99563D13FC864367A9308BC69D3FED9B]' role='measure' type='quantitative' />
      <column caption='Data Quality Grade' datatype='string' name='[data_quality_grade]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Checked' datatype='string' name='[date_checked]' role='dimension' type='nominal' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Death Increase' datatype='integer' name='[death_increase]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='Fips Code' datatype='integer' name='[fips_code]' role='dimension' type='ordinal' />
      <column caption='Hash' datatype='string' name='[hash]' role='dimension' type='nominal' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalized_cumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalized_currently]' role='measure' type='quantitative' />
      <column caption='Hospitalized Increase' datatype='integer' name='[hospitalized_increase]' role='measure' type='quantitative' />
      <column caption='In Icu Cumulative' datatype='integer' name='[in_icu_cumulative]' role='measure' type='quantitative' />
      <column caption='In Icu Currently' datatype='integer' name='[in_icu_currently]' role='measure' type='quantitative' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Iso Subdivision' datatype='string' name='[iso_subdivision]' role='dimension' type='nominal' />
      <column caption='Last Update Et' datatype='datetime' name='[last_update_et]' role='dimension' type='ordinal' />
      <column caption='Load Time' datatype='datetime' name='[load_time]' role='dimension' type='ordinal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='Negative Increase' datatype='integer' name='[negative_increase]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[on_ventilator_cumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[on_ventilator_currently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Pos Neg' datatype='integer' name='[pos_neg]' role='measure' type='quantitative' />
      <column caption='Positive' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Positive Increase' datatype='integer' name='[positive_increase]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total' datatype='integer' name='[total]' role='measure' type='quantitative' />
      <column caption='Total Test Results' datatype='integer' name='[total_test_results]' role='measure' type='quantitative' />
      <column caption='Total Test Results Increase' datatype='integer' name='[total_test_results_increase]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[covid!tracking_99563D13FC864367A9308BC69D3FED9B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid!tracking_99563D13FC864367A9308BC69D3FED9B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330122718257174]' derivation='Count' name='[cnt:Calculation_1742330122718257174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive]' derivation='Count' name='[cnt:positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Count' name='[cnt:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[on_ventilator_currently]' derivation='CountD' name='[ctd:on_ventilator_currently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='CountD' name='[ctd:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[cum:sum:on_ventilator_currently:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[positive]' derivation='Sum' name='[diff:sum:positive:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330121251753993]' derivation='Month' name='[mn:Calculation_1742330121251753993:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[positive]' derivation='Sum' name='[pcdf:sum:positive:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[positive]' derivation='Sum' name='[pcdf:sum:positive:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Pane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[positive]' derivation='Sum' name='[pcdf:sum:positive:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[recovered]' derivation='Sum' name='[pcdf:sum:recovered:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[rank:sum:on_ventilator_currently:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[positive]' derivation='Sum' name='[rank:sum:positive:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[positive]' derivation='Sum' name='[rank:sum:positive:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1742330122718257174]' derivation='Sum' name='[sum:Calculation_1742330122718257174:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death_increase]' derivation='Sum' name='[sum:death_increase:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fips]' derivation='Sum' name='[sum:fips:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitalized]' derivation='Sum' name='[sum:hospitalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitalized_cumulative]' derivation='Sum' name='[sum:hospitalized_cumulative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitalized_currently]' derivation='Sum' name='[sum:hospitalized_currently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospitalized_increase]' derivation='Sum' name='[sum:hospitalized_increase:qk]' pivot='key' type='quantitative' />
      <column-instance column='[in_icu_cumulative]' derivation='Sum' name='[sum:in_icu_cumulative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[in_icu_currently]' derivation='Sum' name='[sum:in_icu_currently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative]' derivation='Sum' name='[sum:negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative_increase]' derivation='Sum' name='[sum:negative_increase:qk]' pivot='key' type='quantitative' />
      <column-instance column='[on_ventilator_cumulative]' derivation='Sum' name='[sum:on_ventilator_cumulative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[sum:on_ventilator_currently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pending]' derivation='Sum' name='[sum:pending:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pos_neg]' derivation='Sum' name='[sum:pos_neg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_increase]' derivation='Sum' name='[sum:positive_increase:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Sum' name='[sum:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total]' derivation='Sum' name='[sum:total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_test_results]' derivation='Sum' name='[sum:total_test_results:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_test_results_increase]' derivation='Sum' name='[sum:total_test_results_increase:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330121253339147]' derivation='User' name='[usr:Calculation_1742330121253339147:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330121253789708]' derivation='User' name='[usr:Calculation_1742330121253789708:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330121255972877]' derivation='User' name='[usr:Calculation_1742330121255972877:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330122719465497]' derivation='User' name='[usr:Calculation_1742330122719465497:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1742330123359576093]' derivation='User' name='[usr:Calculation_1742330123359576093:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='iso_country, state'>
          <field>[iso_country]</field>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.767507' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.232493' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[mn:Calculation_1742330121251753993:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[__tableau_internal_object_id__].[cnt:covid!tracking_99563D13FC864367A9308BC69D3FED9B:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_cumulative:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:negative:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cnt:recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[ctd:recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[diff:sum:positive:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:positive:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:positive:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:positive:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[rank:sum:positive:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[rank:sum:positive:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:recovered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:total_test_results_increase:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cnt:positive:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:positive:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_currently:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:in_icu_currently:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:pos_neg:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death_increase:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:positive_increase:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_increase:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330123359576093:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[ctd:on_ventilator_currently:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:on_ventilator_currently:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[rank:sum:on_ventilator_currently:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:negative_increase:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:pending:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_cumulative:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330122719465497:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:in_icu_cumulative:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:total:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121255972877:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cnt:Calculation_1742330122718257174:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:Calculation_1742330122718257174:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:fips:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:total_test_results:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='positive' />
        <field-sort-custom-order field='negative' />
        <field-sort-custom-order field='pending' />
        <field-sort-custom-order field='hospitalized_currently' />
        <field-sort-custom-order field='hospitalized_cumulative' />
        <field-sort-custom-order field='in_icu_currently' />
        <field-sort-custom-order field='in_icu_cumulative' />
        <field-sort-custom-order field='on_ventilator_currently' />
        <field-sort-custom-order field='on_ventilator_cumulative' />
        <field-sort-custom-order field='recovered' />
        <field-sort-custom-order field='data_quality_grade' />
        <field-sort-custom-order field='last_update_et' />
        <field-sort-custom-order field='hash' />
        <field-sort-custom-order field='date_checked' />
        <field-sort-custom-order field='death' />
        <field-sort-custom-order field='hospitalized' />
        <field-sort-custom-order field='total' />
        <field-sort-custom-order field='total_test_results' />
        <field-sort-custom-order field='pos_neg' />
        <field-sort-custom-order field='fips' />
        <field-sort-custom-order field='death_increase' />
        <field-sort-custom-order field='hospitalized_increase' />
        <field-sort-custom-order field='negative_increase' />
        <field-sort-custom-order field='positive_increase' />
        <field-sort-custom-order field='total_test_results_increase' />
        <field-sort-custom-order field='fips_code' />
        <field-sort-custom-order field='iso_subdivision' />
        <field-sort-custom-order field='load_time' />
        <field-sort-custom-order field='iso_country' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1742330121250885638' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Week' caption='p.DateGranularity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <aliases>
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;quarter&quot;' value='Quarter' />
            <alias key='&quot;week&quot;' value='Week' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
        </column>
        <column alias='Deaths' caption='p.MetricSelector' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;deaths&quot;'>
          <calculation class='tableau' formula='&quot;deaths&quot;' />
          <aliases>
            <alias key='&quot;deaths&quot;' value='Deaths' />
            <alias key='&quot;hospitalized&quot;' value='Hospitalized' />
            <alias key='&quot;recovered&quot;' value='Recovered' />
          </aliases>
        </column>
        <column caption='p.PercentChange' datatype='real' default-format='p0.00%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.075'>
          <calculation class='tableau' formula='0.075' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
        <column alias='All States' caption='p.VizToggle' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <aliases>
            <alias key='false' value='All States' />
            <alias key='true' value='Highest State' />
          </aliases>
        </column>
        <column caption='p.MetricSelector2' datatype='string' name='[p.MetricSelector (copy)_1742330121253232650]' param-domain-type='list' role='measure' type='nominal' value='&quot;In ICU&quot;'>
          <calculation class='tableau' formula='&quot;In ICU&quot;' />
          <aliases>
            <alias key='&quot;ventilator&quot;' value='On ventilator' />
          </aliases>
        </column>
        <column caption='p.PercentChange2' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330121256222734]' param-domain-type='range' role='measure' type='quantitative' value='0.075'>
          <calculation class='tableau' formula='0.075' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
        <column caption='p.PercentChange-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330123358715930]' param-domain-type='range' role='measure' type='quantitative' value='0.045000000000000005'>
          <calculation class='tableau' formula='0.045000000000000005' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
        <column caption='p.PercentChange2-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange2 (copy)_1742330123358887964]' param-domain-type='range' role='measure' type='quantitative' value='0.03'>
          <calculation class='tableau' formula='0.03' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_tracking' id='covid!tracking_99563D13FC864367A9308BC69D3FED9B'>
            <properties context=''>
              <relation connection='excel-direct.04jsdvk1b0mr5g10tg7g31fyeu1m' name='covid_tracking' table='[covid_tracking$]' type='table'>
                <columns gridOrigin='A1:AE10001:no:A1:AE10001:0' header='yes' outcome='2'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='negative' ordinal='3' />
                  <column datatype='integer' name='pending' ordinal='4' />
                  <column datatype='integer' name='hospitalized_currently' ordinal='5' />
                  <column datatype='integer' name='hospitalized_cumulative' ordinal='6' />
                  <column datatype='integer' name='in_icu_currently' ordinal='7' />
                  <column datatype='integer' name='in_icu_cumulative' ordinal='8' />
                  <column datatype='integer' name='on_ventilator_currently' ordinal='9' />
                  <column datatype='integer' name='on_ventilator_cumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='string' name='data_quality_grade' ordinal='12' />
                  <column datatype='datetime' name='last_update_et' ordinal='13' />
                  <column datatype='string' name='hash' ordinal='14' />
                  <column datatype='string' name='date_checked' ordinal='15' />
                  <column datatype='integer' name='death' ordinal='16' />
                  <column datatype='integer' name='hospitalized' ordinal='17' />
                  <column datatype='integer' name='total' ordinal='18' />
                  <column datatype='integer' name='total_test_results' ordinal='19' />
                  <column datatype='integer' name='pos_neg' ordinal='20' />
                  <column datatype='integer' name='fips' ordinal='21' />
                  <column datatype='integer' name='death_increase' ordinal='22' />
                  <column datatype='integer' name='hospitalized_increase' ordinal='23' />
                  <column datatype='integer' name='negative_increase' ordinal='24' />
                  <column datatype='integer' name='positive_increase' ordinal='25' />
                  <column datatype='integer' name='total_test_results_increase' ordinal='26' />
                  <column datatype='integer' name='fips_code' ordinal='27' />
                  <column datatype='string' name='iso_subdivision' ordinal='28' />
                  <column datatype='datetime' name='load_time' ordinal='29' />
                  <column datatype='string' name='iso_country' ordinal='30' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20230503T155110' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20230503T155110' name='Clipboard_20230503T155110leaf'>
            <connection class='textscan' directory='C:/Users/atelagamsetty/OneDrive - Moderna/Documents/My Tableau Repository/Datasources' filename='Clipboard_20230503T155110.txt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20230503T155110leaf' name='Clipboard_20230503T155110#txt' table='[Clipboard_20230503T155110#txt]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20230503T155110leaf' name='Clipboard_20230503T155110#txt' table='[Clipboard_20230503T155110#txt]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20230503T155110' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20230503T155110]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20230503T155110' id='Clipboard_20230503T155110'>
            <properties context=''>
              <relation connection='Clipboard_20230503T155110leaf' name='Clipboard_20230503T155110#txt' table='[Clipboard_20230503T155110#txt]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_BF163607728B47A0B79832CF8DAD647F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Dynamic Labels Comparison' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dynamic Labels Comparison' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_65E2067A8A5C450F9689A4540C4D8CBB]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Positive Vs Recovered' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Positive Vs Recovered' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Dynamic Labels Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 2]</run>
            <run fontalignment='1'>&gt; vs &lt;</run>
            <run fontalignment='1'>[Parameters].[p.MetricSelector (copy)_1742330121253232650]</run>
            <run fontalignment='1'>&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Deaths' caption='p.MetricSelector' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;deaths&quot;'>
              <calculation class='tableau' formula='&quot;deaths&quot;' />
              <aliases>
                <alias key='&quot;deaths&quot;' value='Deaths' />
                <alias key='&quot;hospitalized&quot;' value='Hospitalized' />
                <alias key='&quot;recovered&quot;' value='Recovered' />
              </aliases>
            </column>
            <column caption='p.MetricSelector2' datatype='string' name='[p.MetricSelector (copy)_1742330121253232650]' param-domain-type='list' role='measure' type='nominal' value='&quot;In ICU&quot;'>
              <calculation class='tableau' formula='&quot;In ICU&quot;' />
              <aliases>
                <alias key='&quot;ventilator&quot;' value='On ventilator' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='Metric Selector 1' datatype='integer' name='[Calculation_1742330121253339147]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10; WHEN &quot;deaths&quot; THEN SUM([death])&#13;&#10; WHEN &quot;recovered&quot; THEN SUM([recovered])&#13;&#10; WHEN &quot;hospitalized&quot; THEN SUM([hospitalized])&#13;&#10;WHEN &quot;ventilator&quot; THEN SUM([on_ventilator_currently])&#13;&#10;WHEN &quot;In ICU&quot; THEN SUM([in_icu_currently])&#13;&#10;END' />
            </column>
            <column caption='Metric Selector 2' datatype='integer' name='[Calculation_1742330121253789708]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[p.MetricSelector (copy)_1742330121253232650]&#13;&#10; WHEN &quot;deaths&quot; THEN SUM([death])&#13;&#10; WHEN &quot;recovered&quot; THEN SUM([recovered])&#13;&#10; WHEN &quot;hospitalized&quot; THEN SUM([hospitalized])&#13;&#10;WHEN &quot;ventilator&quot; THEN SUM([on_ventilator_currently])&#13;&#10;WHEN &quot;In ICU&quot; THEN SUM([in_icu_currently])&#13;&#10;END' />
            </column>
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
            <column caption='In Icu Currently' datatype='integer' name='[in_icu_currently]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='On Ventilator Currently' datatype='integer' name='[on_ventilator_currently]' role='measure' type='quantitative' />
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1742330121253339147]' derivation='User' name='[usr:Calculation_1742330121253339147:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1742330121253789708]' derivation='User' name='[usr:Calculation_1742330121253789708:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]' scope='rows' value='Deaths' />
            <format attr='title' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]' scope='cols' value='In ICU' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='tick-color' value='#00000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='solid' />
            <format attr='border-width' data-class='subtotal' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 2]' value='Metric 1' />
            <format attr='title' field='[Parameters].[p.MetricSelector (copy)_1742330121253232650]' value='Metric 2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]</cols>
      </table>
      <simple-id uuid='{559C2844-DC04-4A11-B656-CF7776D09693}' />
    </worksheet>
    <worksheet name='Highest Recovered State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Highest Recovered State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='p.VizToggle' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
              <aliases>
                <alias key='false' value='All States' />
                <alias key='true' value='Highest State' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='Viz Toggle' datatype='boolean' name='[Calculation_1742330122279485456]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Date Trunc - Month' datatype='date' datatype-customized='true' name='[Calculation_1742330122717749269]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC(&apos;month&apos;, [date]))' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_1742330122717749269]' derivation='Month' name='[mn:Calculation_1742330122717749269:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1742330122279485456]' derivation='None' name='[none:Calculation_1742330122279485456:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_country]' derivation='None' name='[none:iso_country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[recovered]' derivation='Sum' name='[sum:recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330122717749269:ok]'>
            <groupfilter from='6' function='range' level='[mn:Calculation_1742330122717749269:ok]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]'>
            <groupfilter function='member' level='[none:Calculation_1742330122279485456:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;MS&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330122717749269:ok]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:iso_country:nk]' />
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:recovered:qk]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330122717749269:ok]</cols>
      </table>
      <simple-id uuid='{A5F6849A-46CC-4C40-9747-7373D29E1C2E}' />
    </worksheet>
    <worksheet name='Most Hospitalized States - Top N'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='14'>Most Hospitalized </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='p.TopN' datatype='integer' datatype-customized='true' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[cum:sum:on_ventilator_currently:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Hospitalized Currently' datatype='integer' name='[hospitalized_currently]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='On Ventilator Currently' datatype='integer' name='[on_ventilator_currently]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[hospitalized_currently]' derivation='Sum' name='[sum:hospitalized_currently:qk]' pivot='key' type='quantitative' />
            <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[sum:on_ventilator_currently:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]'>
            <groupfilter count='[Parameters].[Parameter 5]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([on_ventilator_currently])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' direction='DESC' using='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]' />
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_currently:qk]' included-values='in-range'>
            <min>811696</min>
            <max>1614237</max>
          </filter>
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_currently:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='219' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 5]' value='nStates' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:on_ventilator_currently:qk:1]' />
              <color column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:on_ventilator_currently:qk:1]' />
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{92D5E9CC-4693-4D57-AB4B-CDF38C837092}' />
    </worksheet>
    <worksheet name='Positive Vs Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Positive vs Recovered Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
          </datasources>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hospitalized Currently' datatype='integer' name='[hospitalized_currently]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
            <column caption='Positive' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column-instance column='[hospitalized_currently]' derivation='Sum' name='[sum:hospitalized_currently:qk]' pivot='key' type='quantitative' />
            <column-instance column='[negative]' derivation='Sum' name='[sum:negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recovered]' derivation='Sum' name='[sum:recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:positive:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:recovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_currently:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:negative:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:positive:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:recovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:hospitalized_currently:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:date:qk]' field-type='quantitative' max='12' min='1' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:date:qk]' scope='cols' value='Month of Year' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='tick-color' scope='cols' value='#000000' />
            <format attr='tick-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Multiple Values]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:date:qk]</cols>
      </table>
      <simple-id uuid='{CDCF67F7-38D0-4B1B-AD68-95090CCCC6DC}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4CD7C3C9-EBA4-45C5-90B0-53D02261FE51}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20230503T155110' />
          </datasources>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1A6CD53B-94E4-43C8-9085-A6F3FE0A24C5}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
          </datasources>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='TotalRes (copy)' datatype='real' name='[TotalRes (copy)_1157988076391067650]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([total_test_results])/1000000000' />
            </column>
            <column caption='Total Test Results' datatype='integer' name='[total_test_results]' role='measure' type='quantitative' />
            <column-instance column='[TotalRes (copy)_1157988076391067650]' derivation='User' name='[usr:TotalRes (copy)_1157988076391067650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:TotalRes (copy)_1157988076391067650:qk]' value='c#,##0.0&quot;B&quot;;(#,##0.0&quot;B&quot;)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:TotalRes (copy)_1157988076391067650:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'>&lt;</run>
                <run bold='true' fontsize='15'>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:TotalRes (copy)_1157988076391067650:qk]</run>
                <run bold='true' fontsize='15'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='shape' value='square' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{C7587A6C-6844-497C-B2CF-356049BE69DD}' />
    </worksheet>
    <worksheet name='State-wise Covid Tracking'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death &amp; Covid tracking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <_.fcp.ObjectModelTableType.false...column caption='covid_tracking' datatype='integer' name='[__tableau_internal_object_id__].[covid!tracking_99563D13FC864367A9308BC69D3FED9B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid!tracking_99563D13FC864367A9308BC69D3FED9B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid!tracking_99563D13FC864367A9308BC69D3FED9B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_tracking' datatype='table' name='[__tableau_internal_object_id__].[covid!tracking_99563D13FC864367A9308BC69D3FED9B]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[iso_country]' derivation='None' name='[none:iso_country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[tyr:date:qk]' included-values='in-range'>
            <min>#2020-01-01 00:00:00#</min>
            <max>#2020-12-31 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[tyr:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Longitude (generated)]' field-type='quantitative' max='32429512.74057398' min='8232063.9328604471' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Latitude (generated)]' field-type='quantitative' max='11606398.283331098' min='-3046721.4285323154' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[__tableau_internal_object_id__].[cnt:covid!tracking_99563D13FC864367A9308BC69D3FED9B:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' value='Deaths - Statewise'>
              <formatted-text>
                <run>Deaths - Statewise</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:iso_country:nk]' />
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
              <color column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' />
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[tyr:date:qk]' />
              <lod column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[__tableau_internal_object_id__].[cnt:covid!tracking_99563D13FC864367A9308BC69D3FED9B:qk]' />
              <geometry column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-range-field' value='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.2738673985004425' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Latitude (generated)]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9A3C3AB0-8072-43A5-AF78-0427ECAE61E2}' />
    </worksheet>
    <worksheet name='Table Cal - Recovered change'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recovery (June-Dec)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>% Difference in Recovered for each Date Month (June - Dec) from previous across all states.
</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='All States' caption='p.VizToggle' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
              <aliases>
                <alias key='false' value='All States' />
                <alias key='true' value='Highest State' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='Viz Toggle' datatype='boolean' name='[Calculation_1742330122279485456]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1742330122279485456]' derivation='None' name='[none:Calculation_1742330122279485456:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[recovered]' derivation='Sum' name='[pcdf:sum:recovered:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
                <order field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[tmn:date:ok]' />
                <order field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:date:ok]'>
            <groupfilter from='6' function='range' level='[mn:date:ok]' to='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]'>
            <groupfilter function='member' level='[none:Calculation_1742330122279485456:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:recovered:qk:1]' included-values='non-null' />
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:date:ok]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:recovered:qk:1]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:recovered:qk:1]' scope='rows' value='Difference %' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcdf:sum:recovered:qk:1]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[tmn:date:ok]</cols>
      </table>
      <simple-id uuid='{BFD60341-8E6B-421A-A626-6B8C5345AF4B}' />
    </worksheet>
    <worksheet name='Test Results -Dynamic Colors / Date Granularity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Test Results </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Week' caption='p.DateGranularity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
              <aliases>
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;week&quot;' value='Week' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='Date Selection' datatype='date' datatype-customized='true' name='[Calculation_1742330121251753993]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[date]))' />
            </column>
            <column-instance column='[total_test_results]' derivation='Sum' name='[cum:sum:total_test_results:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330121251753993:ok]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1742330121251753993]' derivation='Month' name='[mn:Calculation_1742330121251753993:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_test_results]' derivation='Sum' name='[pcto:sum:total_test_results:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[total_test_results]' derivation='Sum' name='[sum:total_test_results:qk]' pivot='key' type='quantitative' />
            <column caption='Total Test Results' datatype='integer' name='[total_test_results]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:total_test_results:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:total_test_results:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' scope='cols' value='#666666' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' scope='cols' value='#666666' />
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:total_test_results:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcto:sum:total_test_results:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:total_test_results:qk:1]' palette='tableau-blue-light' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#666666' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='cols' value='#666666' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='DateGranularity' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:total_test_results:qk:1]' />
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcto:sum:total_test_results:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontcolor='#787878'>Term Selection:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330121251753993:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Running Sum of Total Test Results along Month of Date Selection:	</run>
                <run bold='true'><![CDATA[<[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[pcto:sum:total_test_results:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[mn:Calculation_1742330121251753993:ok]</cols>
      </table>
      <simple-id uuid='{858D1DBE-CC57-4BD5-9532-45C1317629EE}' />
    </worksheet>
    <worksheet name='What-if Ventilators'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='14'>Estimation of Ventilators </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Estimation  based on change in demand %. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_tracking (covid_tracking_wb)' name='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='p.PercentChange-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330123358715930]' param-domain-type='range' role='measure' type='quantitative' value='0.045000000000000005'>
              <calculation class='tableau' formula='0.045000000000000005' />
              <range granularity='0.005' max='0.1' min='0.01' />
            </column>
            <column caption='p.PercentChange2-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange2 (copy)_1742330123358887964]' param-domain-type='range' role='measure' type='quantitative' value='0.03'>
              <calculation class='tableau' formula='0.03' />
              <range granularity='0.005' max='0.1' min='0.01' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vckj2j0fg6ggy1ct3yod0u3g7pl'>
            <column caption='What-if Ventilators' datatype='real' name='[Calculation_1742330123359576093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [state]=&quot;MI&quot; OR [state]=&quot;PA&quot;&#13;&#10;THEN [on_ventilator_currently]*(1+[Parameters].[p.PercentChange (copy)_1742330123358715930])&#13;&#10;ELSE [on_ventilator_currently]*(1+[Parameters].[p.PercentChange2 (copy)_1742330123358887964])&#13;&#10;END)' />
            </column>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='On Ventilator Currently' datatype='integer' name='[on_ventilator_currently]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[on_ventilator_currently]' derivation='Sum' name='[sum:on_ventilator_currently:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1742330123359576093]' derivation='User' name='[usr:Calculation_1742330123359576093:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330123359576093:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;AS&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;DE&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;GA&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;ID&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;MD&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;MN&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;MP&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;NC&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;ND&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;NH&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;UT&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;VI&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;VT&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;WY&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]' direction='DESC' using='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]' />
          <slices>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]</column>
            <column>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[p.PercentChange (copy)_1742330123358715930]' value='% Demand (MA or LA)' />
            <format attr='title' field='[Parameters].[p.PercentChange2 (copy)_1742330123358887964]' value='% Demand - Others' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</rows>
        <cols>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{62319BC4-85E9-409B-B0C6-19DCE43C9017}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid Analysis'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Week' caption='p.DateGranularity' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <aliases>
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;quarter&quot;' value='Quarter' />
            <alias key='&quot;week&quot;' value='Week' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
          <members>
            <member alias='Week' value='&quot;week&quot;' />
            <member alias='Month' value='&quot;month&quot;' />
            <member alias='Quarter' value='&quot;quarter&quot;' />
            <member alias='Year' value='&quot;year&quot;' />
          </members>
        </column>
        <column alias='Deaths' caption='p.MetricSelector' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;deaths&quot;'>
          <calculation class='tableau' formula='&quot;deaths&quot;' />
          <aliases>
            <alias key='&quot;deaths&quot;' value='Deaths' />
            <alias key='&quot;hospitalized&quot;' value='Hospitalized' />
            <alias key='&quot;recovered&quot;' value='Recovered' />
          </aliases>
          <members>
            <member alias='Deaths' value='&quot;deaths&quot;' />
            <member alias='Recovered' value='&quot;recovered&quot;' />
            <member alias='Hospitalized' value='&quot;hospitalized&quot;' />
          </members>
        </column>
        <column caption='p.TopN' datatype='integer' datatype-customized='true' name='[Parameter 5]' param-domain-type='range' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
          <range granularity='1' max='20' min='1' />
        </column>
        <column caption='p.MetricSelector2' datatype='string' name='[p.MetricSelector (copy)_1742330121253232650]' param-domain-type='list' role='measure' type='nominal' value='&quot;In ICU&quot;'>
          <calculation class='tableau' formula='&quot;In ICU&quot;' />
          <aliases>
            <alias key='&quot;ventilator&quot;' value='On ventilator' />
          </aliases>
          <members>
            <member alias='On ventilator' value='&quot;ventilator&quot;' />
            <member value='&quot;In ICU&quot;' />
          </members>
        </column>
        <column caption='p.PercentChange-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange (copy)_1742330123358715930]' param-domain-type='range' role='measure' type='quantitative' value='0.045000000000000005'>
          <calculation class='tableau' formula='0.045000000000000005' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
        <column caption='p.PercentChange2-ventilator' datatype='real' default-format='p0.00%' name='[p.PercentChange2 (copy)_1742330123358887964]' param-domain-type='range' role='measure' type='quantitative' value='0.03'>
          <calculation class='tableau' formula='0.03' />
          <range granularity='0.005' max='0.1' min='0.01' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='65' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='42' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='68900' x='800' y='1000'>
                  <zone h='51500' id='19' name='Dynamic Labels Comparison' w='58017' x='800' y='47500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='18875' id='26' name='Test Results -Dynamic Colors / Date Granularity' w='68900' x='800' y='13000'>
                    <layout-cache cell-count-w='12' minheight='184' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='12000' id='40' type-v2='text' w='68900' x='800' y='1000'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontsize='16'>Covid Cases Analysis - USA 2020</run>
                      <run>Æ&#10;</run>
                      <run fontsize='11'>This dashboard is a visual analysis of the covid test results across all states within the United States including deaths, hospitalized and recovery count.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='15625' id='66' type-v2='text' w='68900' x='800' y='31875'>
                    <formatted-text>
                      <run fontalignment='1' fontname='Tableau Semibold' fontsize='11'>Total Test Results </run>
                      <run fontalignment='1'>Æ&#10;&#10;</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#d4d4d4' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51500' id='70' type-v2='empty' w='10883' x='58817' y='47500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='24' h='98000' id='69' is-fixed='true' type-v2='empty' w='3200' x='69700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='98000' id='27' is-fixed='true' type-v2='layout-basic' w='26300' x='72900' y='1000'>
                  <zone h='98000' id='28' is-fixed='true' type-v2='layout-basic' w='26300' x='72900' y='1000'>
                    <zone h='40625' id='29' param='vert' type-v2='layout-flow' w='26300' x='72900' y='58375'>
                      <zone fixed-size='429' h='40625' id='22' is-fixed='true' name='Most Hospitalized States - Top N' w='26300' x='72900' y='58375'>
                        <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone h='32375' id='46' name='What-if Ventilators' show-caption='true' w='26300' x='72900' y='14000'>
                      <zone-style>
                        <format attr='border-color' value='#b4b4b4' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='12000' hide-buttons='true' id='48' mode='slider' param='[Parameters].[p.PercentChange (copy)_1742330123358715930]' type-v2='paramctrl' w='13147' x='72900' y='46375'>
                      <formatted-text>
                        <run>For severe states:</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='12000' hide-buttons='true' id='49' mode='slider' param='[Parameters].[p.PercentChange2 (copy)_1742330123358887964]' type-v2='paramctrl' w='13153' x='86047' y='46375'>
                      <formatted-text>
                        <run>For other states:</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='13000' id='51' type-v2='empty' w='26300' x='72900' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' fixed-size='35' h='15750' id='10' is-fixed='true' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11500' x='57800' y='53375'>
          <formatted-text>
            <run>Metric 1</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' fixed-size='34' h='19750' id='11' is-fixed='true' mode='list' param='[Parameters].[p.MetricSelector (copy)_1742330121253232650]' type-v2='paramctrl' w='10800' x='57800' y='65250'>
          <formatted-text>
            <run>Metric 2</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='4000' id='25' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='11900' x='55800' y='14500'>
          <formatted-text>
            <run>per</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='3750' hide-slider='true' id='8' mode='slider' param='[Parameters].[Parameter 5]' type-v2='paramctrl' w='13400' x='85100' y='93125'>
          <formatted-text>
            <run>Top States</run>
          </formatted-text>
        </zone>
        <zone h='3750' id='54' type-v2='dashboard-object' w='19300' x='75200' y='4000'>
          <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
            <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{5B537CFB-A628-4A28-A321-66E1154E272F}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
            <button-visual-state>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
        <zone forceUpdate='true' h='5250' id='71' type-v2='text' w='10800' x='46900' y='13500'>
          <formatted-text>
            <run fontcolor='#000000'>Breakdown by:</run>
          </formatted-text>
        </zone>
        <zone h='3500' id='77' name='Sheet 8' show-title='false' w='12700' x='24200' y='39625' />
        <zone h='375' id='72' type-v2='empty' w='27000' x='73000' y='56750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#898989' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='81' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='80' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='12000' id='40' type-v2='text' w='68900' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='16'>Covid Cases Analysis - USA 2020</run>
                    <run>Æ&#10;</run>
                    <run fontsize='11'>This dashboard is a visual analysis of the covid test results across all states within the United States including deaths, hospitalized and recovery count.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3750' id='54' type-v2='dashboard-object' w='19300' x='75200' y='4000'>
                  <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
                    <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{5B537CFB-A628-4A28-A321-66E1154E272F}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
                    <button-visual-state>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='18875' id='26' is-fixed='true' name='Test Results -Dynamic Colors / Date Granularity' w='68900' x='800' y='13000'>
                  <layout-cache cell-count-w='12' minheight='184' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5250' id='71' type-v2='text' w='10800' x='46900' y='13500'>
                  <formatted-text>
                    <run fontcolor='#000000'>Breakdown by:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32375' id='46' is-fixed='true' name='What-if Ventilators' show-caption='true' w='26300' x='72900' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#b4b4b4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='4000' id='25' mode='compact' param='[Parameters].[Parameter 1]' show-title='false' type-v2='paramctrl' w='11900' x='55800' y='14500'>
                  <formatted-text>
                    <run>per</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='15625' id='66' type-v2='text' w='68900' x='800' y='31875'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='11'>Total Test Results </run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#d4d4d4' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='28' h='3500' id='77' is-fixed='true' name='Sheet 8' show-title='false' w='12700' x='24200' y='39625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='12000' hide-buttons='true' id='48' mode='slider' param='[Parameters].[p.PercentChange (copy)_1742330123358715930]' type-v2='paramctrl' w='13147' x='72900' y='46375'>
                  <formatted-text>
                    <run>For severe states:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='12000' hide-buttons='true' id='49' mode='slider' param='[Parameters].[p.PercentChange2 (copy)_1742330123358887964]' type-v2='paramctrl' w='13153' x='86047' y='46375'>
                  <formatted-text>
                    <run>For other states:</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51500' id='19' is-fixed='true' name='Dynamic Labels Comparison' w='58017' x='800' y='47500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='35' h='15750' id='10' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='11500' x='57800' y='53375'>
                  <formatted-text>
                    <run>Metric 1</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40625' id='22' is-fixed='true' name='Most Hospitalized States - Top N' w='26300' x='72900' y='58375'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='34' h='19750' id='11' mode='list' param='[Parameters].[p.MetricSelector (copy)_1742330121253232650]' type-v2='paramctrl' w='10800' x='57800' y='65250'>
                  <formatted-text>
                    <run>Metric 2</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='3750' hide-slider='true' id='8' mode='slider' param='[Parameters].[Parameter 5]' type-v2='paramctrl' w='13400' x='85100' y='93125'>
                  <formatted-text>
                    <run>Top States</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B537CFB-A628-4A28-A321-66E1154E272F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid Analysis 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='All States' caption='p.VizToggle' datatype='boolean' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <aliases>
            <alias key='false' value='All States' />
            <alias key='true' value='Highest State' />
          </aliases>
          <members>
            <member alias='Highest State' value='true' />
            <member alias='All States' value='false' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='30' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='26750' id='3' name='Positive Vs Recovered' w='81399' x='800' y='14249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58001' id='10' name='State-wise Covid Tracking' w='62000' x='800' y='40999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13249' id='18' type-v2='empty' w='19800' x='79400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='13249' id='20' type-v2='text' w='78600' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>Death and Recovery Tracking - USA 2020</run>
                    <run>Æ&#10;</run>
                    <run fontsize='11'>This dashboard is a visual analysis of the deaths and recovery across all states within United States.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='26750' id='22' type-v2='text' w='17001' x='82199' y='14249'>
                  <formatted-text>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Positive:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>~4B</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Deaths:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>74M</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Recovery:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>~1B</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='250' h='18251' id='32' is-fixed='true' mode='compact' param='[Parameters].[Parameter 4]' type-v2='paramctrl' w='36400' x='62800' y='40999'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Book' fontsize='15'>Recovery</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#666666' fontname='Tableau Book'>% Difference in recovered cases from previous by month.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39750' id='33' param='vert' type-v2='layout-flow' w='36400' x='62800' y='59250'>
                  <zone h='125' id='28' name='Highest Recovered State' show-title='false' w='36400' x='62800' y='59250'>
                    <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='39625' id='13' name='Table Cal - Recovered change' show-title='false' w='36400' x='62800' y='59375'>
                    <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='494' h='11250' id='11' is-fixed='true' name='State-wise Covid Tracking' pane-specification-id='0' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' type-v2='color' w='12800' x='45600' y='54125' />
        <zone fixed-size='143' h='3375' id='8' is-fixed='true' leg-item-layout='horz' name='Positive Vs Recovered' pane-specification-id='1' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]' show-title='false' type-v2='color' w='51100' x='29800' y='16500' />
        <zone h='5125' id='25' type-v2='dashboard-object' w='15400' x='82500' y='6000'>
          <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
            <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{43F7FB02-321C-4C73-8BD6-AA4708AEAE83}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
            <button-visual-state>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='58375' id='36' type-v2='empty' w='200' x='62400' y='41750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#898989' />
          </zone-style>
        </zone>
        <zone h='250' id='41' type-v2='empty' w='100000' x='200' y='41500'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#898989' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='44' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='13249' id='20' type-v2='text' w='78600' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontsize='16'>Death and Recovery Tracking - USA 2020</run>
                    <run>Æ&#10;</run>
                    <run fontsize='11'>This dashboard is a visual analysis of the deaths and recovery across all states within United States.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5125' id='25' type-v2='dashboard-object' w='15400' x='82500' y='6000'>
                  <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
                    <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{43F7FB02-321C-4C73-8BD6-AA4708AEAE83}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
                    <button-visual-state>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='206' h='26750' id='3' is-fixed='true' name='Positive Vs Recovered' w='81399' x='800' y='14249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='143' h='3375' id='8' leg-item-layout='horz' name='Positive Vs Recovered' pane-specification-id='1' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]' show-title='false' type-v2='color' w='51100' x='29800' y='16500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='26750' id='22' type-v2='text' w='17001' x='82199' y='14249'>
                  <formatted-text>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Positive:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>~4B</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Deaths:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>74M</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='10'>Total Recovery:</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Semibold' fontsize='15'>~1B</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58001' id='10' is-fixed='true' name='State-wise Covid Tracking' w='62000' x='800' y='40999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='494' h='11250' id='11' name='State-wise Covid Tracking' pane-specification-id='0' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' type-v2='color' w='12800' x='45600' y='54125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' fixed-size='250' h='18251' id='32' mode='compact' param='[Parameters].[Parameter 4]' type-v2='paramctrl' w='36400' x='62800' y='40999'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Book' fontsize='15'>Recovery</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#666666' fontname='Tableau Book'>% Difference in recovered cases from previous by month.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='125' id='28' is-fixed='true' name='Highest Recovered State' show-title='false' w='36400' x='62800' y='59250'>
                  <layout-cache has-max-size-h='true' maxheight='1' minheight='1' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39625' id='13' is-fixed='true' name='Table Cal - Recovered change' show-title='false' w='36400' x='62800' y='59375'>
                  <layout-cache minheight='220' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{43F7FB02-321C-4C73-8BD6-AA4708AEAE83}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='State-wise Covid Tracking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 5]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:death:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C96F31E0-B027-445D-A77A-6530162D6E14}' />
    </window>
    <window class='worksheet' name='Positive Vs Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{718CC0DC-C916-4368-AAED-7768FFC294F3}' />
    </window>
    <window class='worksheet' name='Most Hospitalized States - Top N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card custom-title='true' mode='type_in' param='[Parameters].[Parameter 5]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:on_ventilator_currently:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9536D4F7-A4F8-4DEA-9219-9FD1772DB865}' />
    </window>
    <window class='worksheet' name='Test Results -Dynamic Colors / Date Granularity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[cum:sum:total_test_results:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{43FD7565-AE6B-474F-B5FA-A4718E0DC29F}' />
    </window>
    <window class='worksheet' name='Dynamic Labels Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card custom-title='true' mode='compact' param='[Parameters].[p.MetricSelector (copy)_1742330121253232650]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D924E18-ABC9-4C2F-B7A4-68A05191DB69}' />
    </window>
    <window class='worksheet' name='What-if Ventilators'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='slider' param='[Parameters].[p.PercentChange (copy)_1742330123358715930]' type='parameter' />
            <card custom-title='true' mode='slider' param='[Parameters].[p.PercentChange2 (copy)_1742330123358887964]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{51BD009A-70C0-4CB1-89EF-D5797CD0B4AB}' />
    </window>
    <window class='worksheet' name='Table Cal - Recovered change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]</field>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{172CEAE9-BC86-46C8-8D05-20CEAB0C8720}' />
    </window>
    <window class='worksheet' name='Highest Recovered State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:Calculation_1742330122279485456:nk]</field>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:iso_country:nk]</field>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[yr:Calculation_1742330122717749269:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62389CC2-5F44-4584-B94F-6C8B699D904A}' />
    </window>
    <window class='dashboard' name='Covid Analysis'>
      <viewpoints>
        <viewpoint name='Dynamic Labels Comparison'>
          <zoom type='fit-width' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Most Hospitalized States - Top N'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Test Results -Dynamic Colors / Date Granularity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='What-if Ventilators'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{70FA2614-8D00-4E81-8782-1387A6F8E5D0}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Analysis 2'>
      <viewpoints>
        <viewpoint name='Highest Recovered State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Positive Vs Recovered'>
          <zoom type='entire-view' />
          <highlight field='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='State-wise Covid Tracking'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Table Cal - Recovered change'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D70351EB-554C-4EF6-9FFD-8E2DCFA49E21}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[none:state:nk]</field>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:on_ventilator_currently:qk]</field>
            <field>[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[sum:positive:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEDEDB37-233A-4AA3-9BAF-60FAE71B8DA0}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6D881A19-2C8C-4249-BDED-02F02F72AB14}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BE48C285-C3DC-44F0-9A31-B19EBAC3BA81}' />
    </window>
  </windows>
  <_.fcp.DatagraphCoreV1.true...datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='22159072-7b96-4697-9446-68a08b4a0574' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='22159072-7b96-4697-9446-68a08b4a0574' node-guid='fbb951e4-b36d-41c2-970c-3bbd795e6fcf' />
        <pair execution-subgraph-guid='22159072-7b96-4697-9446-68a08b4a0574' node-guid='c2676e98-f2fe-4ebf-a418-efef372306cc' />
        <pair execution-subgraph-guid='22159072-7b96-4697-9446-68a08b4a0574' node-guid='30fddc2e-8cea-40ee-a23b-622739574848' />
        <pair execution-subgraph-guid='22159072-7b96-4697-9446-68a08b4a0574' node-guid='af0a1aac-2d5c-4095-9713-06fea804b774' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253339147:qk]' node-guid='fbb951e4-b36d-41c2-970c-3bbd795e6fcf' orientation='vertical' sheet-identifier='{559C2844-DC04-4A11-B656-CF7776D09693}' title-input-guid='dd2bf2f9-22ff-4ea4-8596-312f8ee54b3a' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[Parameters].[Parameter 2]' fieldname-input-guid='28d4ad2f-7e78-4a89-a33a-e6c3e6a7f073' node-guid='c2676e98-f2fe-4ebf-a418-efef372306cc' value-output-guid='3181332b-33cd-4b46-9caa-5966ca7968f9' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.0vckj2j0fg6ggy1ct3yod0u3g7pl].[usr:Calculation_1742330121253789708:qk]' node-guid='30fddc2e-8cea-40ee-a23b-622739574848' orientation='horizontal' sheet-identifier='{559C2844-DC04-4A11-B656-CF7776D09693}' title-input-guid='b3a18181-b791-4096-be20-3cf3654d1295' />
        <_.fcp.DatagraphNodeSingleValueFieldV1.true...single-value-field-node fieldname='[Parameters].[p.MetricSelector (copy)_1742330121253232650]' fieldname-input-guid='c3fed15a-9edc-4877-997f-4dd8f322c4ff' node-guid='af0a1aac-2d5c-4095-9713-06fea804b774' value-output-guid='eef8c792-9711-48fa-8330-681d71f51b72' />
      </nodes>
      <edges>
        <edge from='3181332b-33cd-4b46-9caa-5966ca7968f9' to='dd2bf2f9-22ff-4ea4-8596-312f8ee54b3a' />
        <edge from='eef8c792-9711-48fa-8330-681d71f51b72' to='b3a18181-b791-4096-be20-3cf3654d1295' />
      </edges>
      <pin-values />
    </graph>
  </_.fcp.DatagraphCoreV1.true...datagraph>
  <thumbnails>
    <thumbnail height='288' name='Covid Analysis' width='288'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='288' name='Covid Analysis 2' width='288'>
      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
      zNfR/wMeXHuWYs2TWAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='288' name='Dynamic Labels Comparison' width='288'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='288' name='Most Hospitalized States - Top N' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAI9klEQVR4nO3d23OcdR3H8e8ekiakJWkbDumEYoG2iHJoOYwg6og66oWM43h29MIZrxz/
      Af8MHa/0xhkdz45cynhAR4EiFRSqQKGtAo1GsI1N2yTN7nohBIvQZGaTfmx4va42zz6zz/cm
      73me3+4+2+j1er0CCGimBwDeuAQIiBEgIEaAgBgBAmJeN0BTU1O1sLBwPmcB3mBeN0Bzc3PV
      7XbP5yzAG4xLMCCmvZKdFjudeujAX+r47Om1ngdYxi3XXVnHu4t1pnPhX6GsKEALZzr11R/8
      uh5/5uhazwMs42tf/mQ9Nn+yZuYv/DVal2BAjAABMQIExAgQECNAQIwAATECBMT0HaDRjUP1
      1qsn6vqrt9U1k5fUQLu19FyjqnZvv7QuGhrs9zDAMnq9Xs38Y7qOTR2tl290Ojd7ok7NzFS3
      s1jHpo5Wt9NZ2vf436aqs7iYHLn/AN187fbau/uK2jo6Urddt70+dtdN1Ww0qqpqy+hIff7u
      2+vdN+/se1BgeY/97N767Xe/XfMnT1ZV1bMHDtQzDz9U3W63/vize2v68KGqqpqbna0Hfvj9
      St+Rue8AdbrdeuTJ5+q+3x+sH/zi0do0MlSbRoaqqmrv7ivqOz99uK7atrUG2q72YK01W63a
      fsONdfiR/WfFpT0wWG9+x7vqqX0PVGdxsQ7uu792ve2Oag8MBKdd5TWgDYPtarda1el0q91q
      1o5tW+vxQ1N1bPZ0bbl4ZDUPBbyON92wp6aPHKpT/5o5a/v4FdtrcHi4Dj+yv1549q+1Y8+e
      0ISv6DtA7VarPnrXTfWlj7+rvnD3HfWHg8/V7On5Gts0XPNnFmug3aqn/jJdN+2aXI15gWU0
      26268sY9dejh3511FtRsterat7+jHvrJj2v37XdWs7Wir4Kuqb4nWOx06oe/eLQee9UXVffs
      mqzxsY31mQ/cWo2qGt04XL/c/1QtnOn0e0hgGdvfcn395jvfqk1bx6s9+MqbQCNjm2vr5GSN
      b78yON0r1mRhZqDdqh3bxusr37uvvnHP/fX1e+6v6WMnanx041ocDniVZqtVV99yWx186MH4
      QvO59H0G9Pz08To5d/ZtAQbazTpwaKrOLL5ytrPv8SM1NJg/5YP1bGLn7hrY8J83gSZ27aqr
      9t5cmye2LT3fbLXqyutvrFb7/+N/se8pnn7uhf/ZdmruTP32j4fO2vbkX6f7PRRwDo1Go3bs
      2bv0d7PZqls+9OGz9mm123Xtne8836O9Lu+NAzECBMQIEBAjQECMAAExAgTECBAQI0BAjAAB
      MQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATEC
      BMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTE
      CBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQ
      ECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAj
      QECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BA
      jAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwA
      ATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAEx
      AgTECBAQI0BATHslOw20W/WJ9+6td9+8c63nAZZx+daL67GjJ9NjrIoVBajT69VTs6fryMyp
      tZ4HWMatnW56hFWzogB1u73689EX68DRF9d6HmAZn56/Lj3CqrEGBMQIEBAjQECMAAExAgTE
      CBAQI0BATN8BunZiS3327W+pkQ0DS9u2jAzVF9+zpyY3b6qqqp2Xba6dl23u91DAOtN3gC7Z
      dFGNDW+oHeOjS9veOjleWzcO15aNQ1VVdfnoSF0+NtLvoYB1ZlUuwQ7+/VhddelYVVUNtJq1
      45KxemLKp6aBc1uVAE0dn62RwYEaHR6srRuHa3ZuoU4tLK7GSwPr2KoEaLHbrSMvzNSOS8bq
      mkvH6smpf67GywLr3Kq9C3b4hZnaednmmtyyqZ6ePrZaLwusY6sWoH+cOFVbNg7VYqdbc2c6
      q/WywDq2ottxnMv+I3+rTrdXnW6vvrfviVp86V4lv3ri2TrT6SztU9Xo91DAOtN3gP57sfn4
      qfmlxyfmFl5zH4CX+SQ0ECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQ
      ECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQENP3L6MC59dFA+16347J
      Wnjpp88vZAIEF5her1snu7M1373wf/JcgOAC061ezS0u1Fznwg+QNSAgRoCAGAECYgQIiBEg
      IEaAgBgBAmIECNaRR+/fV3/a/2hVVT348/tq+vmp8ETn5oOIsI6cOD5TG4aHqqpq5sV/1sL8
      fHiic3MGBMQIEBAjQECMAAExFqFhnZo7PVc/+sY3a9PoxTU+cVm9/+MfqQ1DQ+mxziJAsI7c
      +cH3LT2++3OfCk6yMgIE60ij0XjNx/+vrAEBMQIExAgQECNAQIwAATECBMQIEBAjQECMAAEx
      AgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIE
      xAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQI
      EBAjQECMAAExAgTECBAQI0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQECMAAExAgTECBAQ
      I0BAjAABMQIExAgQECNAQIwAATECBMQIEBAjQEBMe0V7NaoGB1o1NNBa43GA5TQbjWo2mtVs
      NNKj9K3R6/V6r/XE4cOHa2JiooaGhs73TMAbxL8Blx2XV+u9X0AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='Positive Vs Recovered' width='288'>
      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
    </thumbnail>
    <thumbnail height='288' name='Sheet 10' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAEgCAYAAAAUg66AAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADoUlEQVR4nO3UMQHAMADDsHX8OacwfFRC4Mtn2z6AwF8HAO8yICBjQEDGgICMAQEZAwIy
      BgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQM
      CMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQ
      kDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAg
      Y0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDG
      gICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwB
      ARkDAjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMC
      MgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRk
      DAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgY
      EJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEg
      IGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BA
      xoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDGgICM
      AQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkD
      AjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYE
      ZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAxICBjQEDGgICMAQEZAwIyBgRkDAjI
      GBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNAQMaAgIwBARkDAjIGBGQMCMgYEJAx
      ICBjQEDGgICMAQEZAwIyBgRkDAjIGBCQMSAgY0BAxoCAjAEBGQMCMgYEZAwIyBgQkDEgIGNA
      QMaAgIwBARkDAjIGBGQuC2AGPGKy4EIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Sheet 8' width='126'>
      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
    </thumbnail>
    <thumbnail height='288' name='State-wise Covid Tracking' width='288'>
      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
      MFn8P6h9gCJSq8i+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='96' name='Test Results -Dynamic Colors / Date Granularity' width='288'>
      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
      6uoyd+5cDh8+zOeff45SqQQqhmbnz5/nwIEDqFQqHj9+jI6ODmPHjiU8PJzc3FwUCgWfffYZ
      gwcP5v79+2RkZDBq1CgCAgKws7MjMzOTkJAQAgMDycmpfYzfWNRqNYcO7Geclyfyfv1ZE/JJ
      o/YaaqvPvncfLv2SoZnzybh5m30HjqAoKmTs6OHkZGcBFRfbGO/x7IwI49atXBSKIrZt/RRn
      F1fu/+Mf/JpxDc+RowgO+pBudj1I+zWbVWvXsyrooxfOpfw7s+zYiV179nMt7Sq9ulvRpVNb
      pr7ty7yFf2bW3GdTCGVlZXy6+RO8xo7HyqqL1n0ZGRnj7OLKtq2folAUcetWLjsjwhjjPZ6U
      i0no6urSo0cvVixbjN/0maT9ms2kyVNZsew9zTxcXb02CUihUDBv3jzWrFnD5s2bWb16Nfr6
      +lrLPnz4kHXr1jF79mxmz55NREQErVq1qle9MpkMe3t7tm/fTnl5Od9++y1QMdezZ88eYmNj
      6dGjBx06dMDFxYWjR4/St29fWrZsqWmfu7s77777Lh4eHvTq1YuuXbsyZcoUwsPDGT16NHl5
      eSgUCmbNmoWuri5vvfUW3bp149y5c/UL1itQKIr4y4I5fLx2FRv+51MCg9fWGGcp6mvWrBlv
      WFkTsmEzdj16sm3rp5p1rm5DmPyOH6OHu+PYxw4b2668PXkqOyO2M2KUF7fz8ihWKJgxcw66
      ujIGOA2ka7fuJJyLb7TPJ7XUSylMfdsHtyEeXM3I5tesfA4cieLbfV8T+OEHmqeE0SdPcO/u
      XXwmaJ+be2qq3wx69LTHqZ89IzwG4zPhbfo59uerXV/gO2kyly4l899/bMMY73Ho6soYOdob
      PX19rlxOrVf7JZ+EBrh16xbTp0/H3NycM2fO1JpMng618vPzOXnyZIN9L1GLFi1wdnbm8uXL
      mmV2dnaahPS89evXY2Zmhq5uRfh0dHTw9fXF19dXUyY6OhodHR0GDhzIDz/8gKmpqaaHpqOj
      g4WFBfn5+Q3S9peVl3eLOTPfxcy8LSdPx9Oynkm7Kepr3rw5Q4YOZ+9XuyhRKjE0MkJHR4dx
      PhMZ5zNRU+70j6fQ0dHB6S1nok+eoIWpKSbPxbmdhQV37tyuqRrJ6OnpYWraimKF9p7D3Tv5
      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
    </thumbnail>
    <thumbnail height='288' name='What-if Ventilators' width='288'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
